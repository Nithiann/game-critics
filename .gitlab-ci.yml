image: node:latest

stages:
  - test
  - deploy

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/

#
# Global variables
#
variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2


unittests:
  image: zenika/alpine-chrome:86-with-node
  stage: test
  variables:
    NODE_ENV: development
    # DB_USER: $DB_USER
    # DB_PASSWORD: $DB_PASSWORD
    # DB_HOST: $DB_HOST
    # DB_PORT: $DB_PORT
    # DB_DATABASE: $DB_DATABASE
  before_script:
   - npm install --no-optional
  script:
    - npm run test
    # - echo 'testen tijdelijk disabled in .gitlab-ci.yml!'
    # - npm run sonar

#
# Run end-to-end tests
#
end2end:
  image: zenika/alpine-chrome:86-with-node
  stage: test
  variables:
    NODE_ENV: development
  before_script:
    #  - npm install --no-optional
  script:
    # - chrome --version
    # - node ./node_modules/protractor/bin/webdriver-manager update --versions.chrome=76.0.3809.100
    # - node ./node_modules/protractor/bin/webdriver-manager update
    - echo 'testen tijdelijk disabled'
    # - npm run e2e


#
# Deploy to Heroku
# DPL is a deploy tool made for continuous deployment thatâ€™s developed and used
# by Travis CI, but can also be used with GitLab CI.
# https://docs.gitlab.com/ee/ci/examples/deployment/#using-dpl-with-docker
#

production:
  type: deploy
  stage: deploy
  image: ruby:latest
  script:
    # Get your key at https://dashboard.heroku.com/account
    # and add it to your project environment variables at GitLab.
    - echo "Heroku api key = $HEROKU_API_KEY"
    # The name of your app at Heroku. See https://dashboard.heroku.com/apps.
    - echo "Heroku appname = $HEROKU_APP_NAME"
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  only:
    - main
